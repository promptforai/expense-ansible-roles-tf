- name: disabling node js module.
  ansible.builtin.command: dnf module disable nodejs -y

- name: enabling node js 20 module.
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: installing node js 
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
  - nodejs
  - mysql

- name: ansible to install pymysql and cryptography
  ansible.builtin.pip:
    name:
    - PyMySQL
    - cryptography
    executable: pip3.9

- name: creating a user
  ansible.builtin.user:
    name: expense

- name: Common role task assigned 
  ansible.builtin.include_role:
    name: common
    tasks_from: app_conf_file
    
# - name: Create a directory if it does not exist
#   ansible.builtin.file:
#     path: /app
#     state: directory

# - name: Download the source code
#   ansible.builtin.get_url:
#     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#     dest: /tmp/backend.zip

# - name: unziping from /tmp location into app location.
#   ansible.builtin.unarchive:
#     src: /tmp/backend.zip
#     dest: /app
#     remote_src: yes

- name: installing dependencies.
  ansible.builtin.command: npm install
  args:
    chdir: /app

- name: copying backend service file.
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service
  notify: daemon process reloading

- name: import mysql data
  community.mysql.mysql_db:
    login_user: root
    login_password: "{{ password }}"
    login_host: "{{ login_host }}"
    target: /app/schema/backend.sql
    name: all
    state: import

# - name: daemon process reloading    
#   ansible.builtin.systemd_service:
#     name: backend
#     state: restarted
#     daemon_reload: true